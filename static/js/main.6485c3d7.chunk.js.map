{"version":3,"sources":["components/Card.js","components/Loading.js","components/UserList.js","components/Header.js","components/SNS.js","components/Profile.js","components/Project.js","components/APIcalls.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","user","changePage","noAvatar","works","slice","key","id","onClick","screen_name","src","avatar","alt","name","profession","map","work","thumbnail","Loading","UserList","handleScroll","window","innerHeight","pageYOffset","document","body","scrollHeight","addContent","users","isAddingContent","useRef","contentNumberConstant","wheel","touchmove","current","setContentNumber","prev","Math","min","length","useState","contentNumber","useEffect","addEventListener","removeEventListener","Header","isHidden","setHistory","hideHistory","icon","faStar","e","stopPropagation","faHistory","history","sort","el1","el2","time","index","username","visited","project","idx","title","SNS","arr","profile","sns","faTwitter","faInstagram","faGlobe","open","Profile","p","numberOfItems","tags","currentTag","setProps","setTag","thumb2x","width","location","bio","i_want_to_work_with","Object","keys","tag","i","gotoTag","user_roles","role","type","faImage","faVideo","Project","noOfMedia","videos","images","mediatype","description","credits","media","source","showFullscreen","startFullscreen","fullscreenElement","isFullscreen","setFullscreen","fullscreenImage","setFullscreenImage","switchToFullscreen","documentElement","requestFullscreen","switchFromFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","getImage","number","newIndex","style","margin","image","url","openFullscreen","srcset","faAngleLeft","faAngleRight","faTimes","faCompress","faExpand","API","App","state","header","page","data","currentUser","this","findIndex","splice","push","Date","now","getPersonFromHistory","addPersonToHistory","author","pop","unshift","param","fetch","then","res","status","json","catch","error","console","log","setState","bind","worksAndTags","forEach","category_list","category","Promise","all","getProfile","creative_roles","undefined","addProjectToHistory","scrollTo","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6485c3d7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = props => {\n    const { className, user, changePage, noAvatar } = props;\n    const works = user.works.slice(0, 4);\n    \n    return <div className={className} key={user.id}>\n        <div className=\"card__infobox\">\n            <div className=\"card__infobox__imgContainer\">\n                <img onClick={ () => changePage(\"Profile\", user.screen_name)} className=\"card__infobox__image\" src={user.avatar === \"\" ? noAvatar : user.avatar } alt=\"avatar\" />\n            </div>\n            <div className=\"card__infobox__username\">{user.name}</div>\n            <div className=\"card__infobox__usertitle\">{user.profession}</div>\n        </div>            \n        <div className=\"card__works\">\n            { works.map(work => <img key={work.id} onClick={ () => changePage(\"Project\", work.id)} className=\"card__works__individual\" src={work.thumbnail} alt=\"{work.title}\" /> )}                \n        </div>\n    </div>\n}\n\nexport default Card;","import React from 'react';\n\nconst Loading = () => \n    <div className=\"loading\">\n        <div className=\"loading__title\">Loading</div> \n        <div className=\"loading__one\">.</div>\n        <div className=\"loading__two\">.</div>\n        <div className=\"loading__three\">.</div>\n    </div>\n\nexport default Loading;","import React, { useState, useEffect, useRef } from \"react\";\nimport Card from './Card';\nimport Loading from './Loading';\n\nconst UserList = props => {\n\n    const handleScroll = () => { if((window.innerHeight + window.pageYOffset) >= document.body.scrollHeight) addContent(); }\n    // VARIABLES\n    const { users, noAvatar, changePage } = props;\n    \n    const isAddingContent = useRef(false);\n    const contentNumberConstant = useRef(4);\n    const wheel = useRef(handleScroll);\n    const touchmove = useRef(handleScroll);\n\n    // FUNCTIONS\n    const addContent = () => {\n        if(!isAddingContent.current) {\n            isAddingContent.current = true;\n            setContentNumber(prev => Math.min(users.length, prev + contentNumberConstant.current));\n        }\n    }\n\n    //HOOKS\n    const [contentNumber, setContentNumber] = useState(contentNumberConstant.current);\n\n    useEffect(() => window.addEventListener(\"wheel\", wheel.current), []);\n    useEffect(() => window.addEventListener(\"touchmove\", touchmove.current), []);   \n    useEffect(() => { return () => window.removeEventListener(\"wheel\", wheel.current) }, []);\n    useEffect(() => { return () => window.removeEventListener(\"touchmove\", touchmove.current) }, []);\n    useEffect(() => { isAddingContent.current = false }); \n\n    return ( \n        users.length > 0         \n        ? <div className=\"pickedCreators\">\n                <h1 className=\"pickedCreators__title\">Picked up creators</h1>\n                <div className=\"pickedCreators__cardContainer\">\n                    { users.slice(0, contentNumber).map((user, key) => <Card key={key} className=\"card\" user={user} changePage={changePage} noAvatar={noAvatar}/>)}\n                </div>\n            </div>\n        : <Loading />\n        )\n}\n\nexport default UserList;","import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHistory, faStar } from '@fortawesome/free-solid-svg-icons'\n\n\nconst Header = props => {\n    const [isHidden, setHistory] = useState(true);\n    const toggle = (e) => {\n        e.stopPropagation();\n        setHistory(!isHidden);        \n    }\n    const hideHistory = useRef(true);\n    useEffect(() => window.addEventListener(\"click\", hideHistory.current = () => setHistory(true)), [])\n    useEffect(() => { return () => window.removeEventListener(\"click\", hideHistory.current) }, [])\n\n    return (\n        <div className=\"header\">\n            <h1 className=\"header__title\">foriio</h1>\n            <nav className=\"header__navbar\">\n                <div className=\"header__navbar__item\" onClick={() => props.changePage(\"UserList\")}>\n                    <FontAwesomeIcon icon={faStar}/> \n                    <span className=\"header__navbar__item__text\">Picked up creators</span>\n                </div>                \n                <div className=\"header__navbar__item\" onClick={toggle}><FontAwesomeIcon icon={faHistory}/> \n                    <span className=\"header__navbar__item__text\">{isHidden ? \"Open\" : \"Close\" } history</span>\n                </div>                    \n            </nav>\n            <div className={\"history\" + (isHidden ? ' history__hide' : \"\")}>\n                { props.history.length > 0 \n                    ? props.history.sort((el1, el2) => (el1.time < el2.time) ? 1 : -1).map((user, index) => \n                        <div className=\"history__user\" key={index}> \n                            <div className=\"history__user__container\" onClick={() => props.changePage(\"Profile\", user.username)}>\n                                <img className=\"history__user__avatar\" src={user.avatar} alt=\"user avatar\"/>\n                                <div className=\"history__user__about\">\n                                    <div className=\"history__user__about__name\">{user.name}</div>\n                                    <div className=\"history__user__about__profession\">{user.profession}</div>                                                                        \n                                </div>\n                            </div>\n                            <div className=\"history__projects\">\n                                { user.visited.map((project, idx) => \n                                    <div key={idx} onClick={() => props.changePage(\"Project\", project.id)} className=\"history__projects__image\">\n                                        <img src={project.thumbnail} alt=\"project\"/>\n                                        <div className=\"history__projects__title\">{project.title}</div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>) \n                    : <div className=\"history__user history__empty\">You haven't visited any pages yet...</div>\n                }\n            </div> \n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'\nimport { faTwitter, faInstagram  } from '@fortawesome/free-brands-svg-icons'\n\nconst SNS = props => {\n    const { arr, profile, className } = props;\n    return (\n        <div className={ className }>\n            { arr.map((sns, key) => {\n                if(profile[sns]===\"\") return \"\";\n                let icon;\n                switch(sns) {\n                    case \"twitter_url\": icon = faTwitter; break;\n                    case \"instagram_url\": icon = faInstagram; break;\n                    case \"website\": icon = faGlobe; break;\n                    default: icon = faGlobe; break;\n                }\n                return (\n                    <div key={key} onClick={() => window.open(profile[sns])} className=\"profile__userdata__snsIcon\">\n                        <FontAwesomeIcon icon = {icon}/>                \n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default SNS;\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faVideo, faImage } from '@fortawesome/free-solid-svg-icons'\nimport SNS from './SNS';\n\n\nconst Profile = p => {\n\n    const handleScroll = () => { if((window.innerHeight + window.pageYOffset) >= document.body.scrollHeight) addContent(); }\n    // VARIABLES        \n\n    const isAddingContent = useRef(false);\n    const contentNumberConstant = useRef(6);\n    const wheel = useRef(handleScroll);\n    const touchmove = useRef(handleScroll);\n    const numberOfItems = useRef(6);\n\n    // FUNCTIONS\n    const addContent = () => {\n        if(!isAddingContent.current) {\n            isAddingContent.current = true;\n            setContentNumber(prev => Math.min(props.tags[currentTag].length, prev + contentNumberConstant.current));\n            numberOfItems.current =  (numberOfItems.current + 6 > (props.tags[currentTag].length)) ? props.tags[currentTag].length : numberOfItems.current + 6;\n        }\n    }\n    const gotoTag = (tag) => {\n        setTag(tag);\n        setContentNumber(contentNumberConstant.current);\n    }    \n\n    //HOOKS\n    const [props, setProps] = useState(p);\n    const [currentTag, setTag] = useState(\"All\");\n    const [contentNumber, setContentNumber] = useState(contentNumberConstant.current);\n\n    useEffect(() => window.addEventListener(\"wheel\", wheel.current), []);\n    useEffect(() => window.addEventListener(\"touchmove\", touchmove.current), []);   \n    useEffect(() => { return () => window.removeEventListener(\"wheel\", wheel.current) }, []);\n    useEffect(() => { return () => window.removeEventListener(\"touchmove\", touchmove.current) }, []);\n    useEffect(() => { isAddingContent.current = false }); \n    useEffect(() => {\n        setTag(\"All\");\n        setContentNumber(contentNumberConstant.current);\n        numberOfItems.current = 6;\n        setProps(p);\n    },[p])\n\n    return <div className=\"profile\">\n            <div className=\"profile__userdata\">\n                <div className=\"profile__userdata__avatar\">\n                    <img src={ props.profile.avatar.thumb2x ? props.profile.avatar.thumb2x : props.noAvatar } alt=\"user avatar\" width=\"60px\" />\n                </div>\n                <div className=\"profile__userdata__container\">\n                    <div className=\"profile__userdata__name\">{props.profile.name}</div>\n                    <div className=\"profile__userdata__profession\">{props.profile.profession} {props.profile.location && \"@\\u00A0\" + props.profile.location}</div>\n                    <div className=\"profile__userdata__bio\"><br/>{props.profile.bio}</div>\n                    <div className=\"profile__userdata__location\"></div>\n                    <div className=\"profile__userdata__lookingFor\"><br/>{props.profile.i_want_to_work_with}</div>\n                    <SNS className=\"profile__userdata__sns\" arr = {[\"twitter_url\", \"instagram_url\", \"website\"]} profile={props.profile} />\n                </div>\n            </div>     \n            <div className=\"portfolio\">\n                <div className=\"portfolio__taglist\">{\n                    Object.keys(props.tags).map((tag, i) => {\n                        return currentTag===tag \n                        ? <div className=\"portfolio__taglist__tag portfolio__taglist__selected\" key = {i}>{tag}</div>\n                        : <div className=\"portfolio__taglist__tag \" onClick={() => gotoTag(tag)} key = {i}>{tag}</div>\n                    })}\n                </div>\n                <div className=\"portfolio__listing\">\n                    { props.tags[currentTag].slice(0, numberOfItems.current).map((tag, index) => {                            \n                        const work = props.works[tag];\n                        return <div key={index} className=\"portfolio__listing__wrapper\" onClick={ () => props.changePage(\"Project\", work.id)}>\n                            <div className=\"portfolio__listing__container\">\n                                <img className=\"portfolio__listing__container__thumbnail polaroid\" src={work.thumbnail} alt=\"thumbnail\"/>    \n                                <div className=\"portfolio__listing__container__overlay\">\n                                    <div className=\"portfolio__listing__container__overlay__title\">\n                                        {work.title}\n                                    </div>\n                                    <div className=\"portfolio__listing__container__overlay__roles\">\n                                        {work.user_roles.map((role, index, arr) => {\n                                                return <div key={index}>{role} {index<arr.length -1 ? `and\\u00A0 ` : \"\"}</div>\n                                        })}\n                                    </div>\n                                    <div className=\"portfolio__listing__container__overlay__icon\">\n                                        { work.type === \"image\" \n                                            ? <FontAwesomeIcon icon = {faImage}/>\n                                            : <FontAwesomeIcon icon = {faVideo}/>                                        \n                                        }\n                                    </div>                                    \n                                </div>\n                                <div className=\"portfolio__listing__wrapper__info\">\n                                    <div className=\"portfolio__listing__wrapper__info__title\">\n                                        { work.type === \"image\" \n                                            ? <FontAwesomeIcon icon = {faImage}/>\n                                            : <FontAwesomeIcon icon = {faVideo}/>                                        \n                                        }\n                                        &nbsp;{work.title}\n                                    </div> \n                                    <div className=\"portfolio__listing__wrapper__info__roles\">\n                                        {work.user_roles.map((role, index, arr) => {\n                                                return <div key={index}>{role} {index<arr.length -1 ? `and\\u00A0` : \"\"}</div>\n                                        })}\n                                    </div> \n                                </div>\n                            </div>\n                        </div>\n                    })}\n                </div> \n            </div>           \n        </div>\n}\n\nexport default Profile;","import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faAngleLeft, faAngleRight, faExpand, faCompress } from '@fortawesome/free-solid-svg-icons'\nimport Loading from './Loading';\n\nconst Project = props => {\n    \n    const handleScroll = () => { if((window.innerHeight + window.pageYOffset) >= document.body.scrollHeight) addContent(); }\n    // VARIABLES\n    const { noOfMedia, videos, images, thumbnail, mediatype, title, description, changePage, credits, noAvatar } = props;\n\n    const isAddingContent = useRef(false);\n    const media = useRef(images ? images : videos ? videos : [[thumbnail]]);\n    const source = useRef(images ? \"srcset\" : videos ? \"picture_url\" : 0);\n    const contentNumberConstant = useRef(6);\n    const wheel = useRef(handleScroll);\n    const touchmove = useRef(handleScroll);\n\n    const showFullscreen = useRef(false);\n    const startFullscreen = useRef(!!document.fullscreenElement);\n\n    // FUNCTIONS\n    const addContent = () => {\n        if(!isAddingContent.current) {\n            isAddingContent.current = true;\n            setContentNumber(prev => Math.min(noOfMedia.length, prev + contentNumberConstant.current));\n        }\n    }\n\n    //HOOKS\n    const [isFullscreen, setFullscreen] = useState(false);\n    const [fullscreenImage, setFullscreenImage] = useState(\"\");\n    const [contentNumber, setContentNumber] = useState(contentNumberConstant.current);\n\n    useEffect(() => window.addEventListener(\"wheel\", wheel.current), []);\n    useEffect(() => window.addEventListener(\"touchmove\", touchmove.current), []);   \n    useEffect(() => { return () => window.removeEventListener(\"wheel\", wheel.current) }, []);\n    useEffect(() => { return () => window.removeEventListener(\"touchmove\", touchmove.current) }, []);\n    useEffect(() => { \n        isAddingContent.current = false;\n    }); \n\n    // The following two classes refer to the whole screen (not the viewport)\n    const switchToFullscreen = () => {\n        document.documentElement.requestFullscreen();\n        setFullscreen(true);\n    }\n    const switchFromFullscreen = () => {\n        if(document.fullscreenElement) {\n            if (document.exitFullscreen)  document.exitFullscreen();\n            else if (document.mozCancelFullScreen) document.mozCancelFullScreen();\n            else if (document.webkitExitFullscreen) document.webkitExitFullscreen();\n            else if (document.msExitFullscreen) document.msExitFullscreen(); \n            setFullscreen(false);\n        }\n    }\n\n    const openFullscreen = (index) => {\n        // 1 stands for video\n        if(mediatype === 1) {\n            window.open(videos[index].url);\n        }\n        else {\n            startFullscreen.current = !!document.fullscreenElement;\n            showFullscreen.current = true;\n            setFullscreen(startFullscreen.current);\n            setFullscreenImage(index);\n        }\n    }\n\n    const exitFullscreen = () => {\n        showFullscreen.current = false;\n        startFullscreen.current \n        ? switchToFullscreen()\n        : switchFromFullscreen()\n        setFullscreenImage(-1);\n    }\n\n    const getImage = (number) => {\n        let newIndex = fullscreenImage + number;\n        if(newIndex < 0) newIndex += images.length;\n        else if(newIndex >= images.length) newIndex -= images.length;\n        setFullscreenImage(newIndex);\n    }\n\n    return (mediatype || thumbnail\n        ? <div className=\"project\">\n            <div className=\"project__info\">\n                <div className=\"project__info__container\">\n                    <h1 className=\"project__info__title\">{title}</h1>\n                    <div className=\"project__info__description\">{description}</div>                    \n                </div>\n                <div className=\"project__info__credits\">\n                    { credits.map((credits, index) => {\n                        return( <div key={index} className=\"project__info__credits__container\">\n                            <div className=\"project__info__credits__role\">{credits.name}</div> \n                            <div className=\"project__info__credits__name\" onClick={() => changePage(\"Profile\", credits.user.screen_name)}>\n                                <img src={ credits.user.profile.avatar.thumb2x === null ? noAvatar : credits.user.profile.avatar.thumb2x } alt=\"user avatar\"/>\n                                { credits.user.profile.name}\n                            </div> \n                        </div>\n                        )\n                })}</div>\n            </div> \n\n            <div style={{margin: \"1rem\"}} />    \n            \n            <div className=\"portfolio\">\n                <div className=\"portfolio__listing\">                                      \n                { media.current.map((image, index) => { \n                    return <div key={index} className=\"portfolio__listing__wrapper\">\n                        <div className=\"project__view\">\n                            <img className=\"portfolio__listing__container__thumbnail zoominCursor\" \n                                src={image[source.current]}\n                                alt=\"portfolio item\" \n                                onClick= { () => openFullscreen(index) }\n                            />\n                        </div>\n                    </div>\n                })                \n            }\n            </div>    \n        </div>\n        { showFullscreen.current \n        ? <div className=\"fullscreenImage\">\n            <div onClick={ () => exitFullscreen() } className=\"fullscreenImage__overlay\"></div>\n            <img src={ media.current[fullscreenImage].srcset } alt=\"viewing fullscreen\" />\n            <div onClick={ () => getImage(-1) } className=\"fullscreenImage__button fullscreenImage__button-left\" ><FontAwesomeIcon icon = {faAngleLeft}/></div>\n            <div onClick={ () => getImage(1) } className=\"fullscreenImage__button fullscreenImage__button-right\" ><FontAwesomeIcon icon = {faAngleRight}/></div>\n            <div onClick={ () => exitFullscreen() } className=\"fullscreenImage__button fullscreenImage__button-close\" ><FontAwesomeIcon icon = {faTimes}/></div>\n            { isFullscreen\n                ? <div onClick={ () => switchFromFullscreen() } className=\"fullscreenImage__button fullscreenImage__button-fullscreen\" ><FontAwesomeIcon icon = {faCompress}/></div>\n                : <div onClick={ () => switchToFullscreen() } className=\"fullscreenImage__button fullscreenImage__button-fullscreen\" ><FontAwesomeIcon icon = {faExpand}/></div>\n            }\n        </div> \n        : \"\" }\n    </div>\n    : <Loading />)\n}\n\nexport default Project;","const API=\"https://api.foriio.com/api/v1\";\n\nconst VIDEO = 1;\nconst IMAGE = 2;\n\nconst getUsers = () => {\n    return fetch(`${API}/promoted/users`)\n    .then(res => {\n        if(res.status === 200) return res.json()\n        else throw (res.status);\n    })\n    .catch(error => {\n        console.log(\"Error:\", error)\n    })\n};\n\nconst getProfile = (username) => {\n    const profile = fetch(`${API}/users/${username}/profile`)\n        .then(res => {\n            if(res.status === 200) return res.json()\n            else throw (res.status);\n        })\n        .then(data => {\n            return data.profile;\n        })\n        .catch(error => {\n            console.log(\"Error:\", error)\n        })\n\n    const worksAndTags = fetch(`${API}/users/${username}/works`)\n        .then(res => {\n            if(res.status === 200) return res.json()\n            else throw (res.status);\n        })\n        .then(data => {\n            // Create tags\n            let tags = {};\n            tags[\"All\"] = [];\n            data.works.forEach((work, index) => {\n                work.category_list.forEach(category => {\n                    if(!tags[category]) tags[category] = [];\n                    tags[category].push(index);\n                })\n                tags[\"All\"].push(index);\n            })\n            return [ data.works, tags ]\n        })\n        .catch(error => {\n            console.log(\"Error:\", error)\n        })\n    return Promise.all([profile, worksAndTags]);\n}\n\nconst getProject = (id) => {\n    return fetch(`${API}/works/${id}`)\n    .then(res => {\n        if(res.status === 200) return res.json()\n        else throw (res.status);\n    })\n    .then(data => {\n        const { creative_roles, description, title, images, videos, thumbnail, id, author } = data.work;\n        return { \n            credits: creative_roles,\n            description,\n            title,\n            images,\n            videos, \n            id,\n            mediatype: images ? IMAGE : videos ? VIDEO : undefined,\n            noOfMedia: images ? images.length : videos ? videos.length : 0,\n            thumbnail,\n            author,\n        };\n    })\n    .catch(error => {\n        console.log(\"Error:\", error)\n    })\n}\n\nexport { getUsers, getProfile, getProject }","import \"./styles/styles.scss\";\nimport React, { Component } from 'react';\nimport UserList from \"./components/UserList\"\nimport Header from \"./components/Header\"\nimport Profile from \"./components/Profile\"\nimport Project from \"./components/Project\"\nimport Loading from \"./components/Loading\";\nimport { getUsers, getProfile, getProject } from \"./components/APIcalls\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.noAvatar = \"https://dyci7co52mbcc.cloudfront.net/static/images/default_avatar_v2.png\";\n    this.state = {\n      header: <div />,\n      page: <Loading />,\n      data: \"\",\n      history: [],\n      props: {},\n      users: [],\n      currentUser: false,\n    }\n  }\n\n  getPersonFromHistory(name) {\n    return this.state.history.findIndex(current => current.username === name)\n  }\n\n  addPersonToHistory(data, name) {\n    let history = [...this.state.history];\n    let index = history.findIndex(current => current.username === (name ? name : data.user.screen_name))\n\n    if(index < 0) {  \n      // remove oldest         \n      if(history.length >= 5) {\n        let idx = 0;\n        for(let i = 1; i < history.length; i++) { if(history[i].time < history[idx].time) idx = i; }\n        history.splice(idx, 1);\n      }\n\n      history.push({\n        username: name ? name : data.user.screen_name,\n        name: data.name,\n        profession: data.profession,\n        avatar: data.avatar.thumb2x ? data.avatar.thumb2x : this.noAvatar,\n        visited: [],\n        time: Date.now(),\n      })\n      index = history.length - 1;\n    }\n    else { history[index].time = Date.now(); }\n    return [history, index];\n  }\n  addProjectToHistory(data) {\n    // If coming from profile page\n    let history;\n    let index = this.state.currentUser ? this.getPersonFromHistory() : -1;\n    if(index < 0) [history, index] = this.addPersonToHistory(data.author.profile, data.author.screen_name);\n    else  history = [...this.state.history];\n    \n    const project = {\n      title: data.title,\n      thumbnail: data.thumbnail,\n      id: data.id,\n    }\n\n    let idx = history[index].visited.findIndex(current => current.id === project.id);\n    if(idx >= 0) {  \n      history[index].visited.splice(idx, 1);\n    }\n\n    if(history[index].visited.length >= 6) history[index].visited.pop();\n    history[index].visited.unshift(project);\n    return history;\n  }\n\n  changePage(page, param) {\n    switch(page) {\n      case \"UserList\":    \n        getUsers()\n        .then(data => {    \n          this.setState({\n            page: <UserList users={ data.users } noAvatar={ this.noAvatar } changePage={this.changePage.bind(this)}/>,\n            currentUser: false\n          }); \n        }); \n        break;\n      case \"Profile\": \n        getProfile(param)\n        .then(data => {           \n          this.setState({\n            page: <Profile profile={ data[0] } time={Date.now()} works={ data[1][0] } tags={ data[1][1] } noAvatar={this.noAvatar} changePage={this.changePage.bind(this)} />,\n            history: this.addPersonToHistory(data[0])[0],\n            currentUser: data[0].user.screen_name,\n          })\n        })\n        break;\n      case \"Project\": \n        getProject(param)\n        .then(data => {\n          this.setState({\n            page: <Project noAvatar={this.noAvatar} {...data} changePage={this.changePage.bind(this)} />,\n            history: this.addProjectToHistory(data)\n          })\n        })\n        break;\n      default: \n        page = <Loading />; \n        break;\n    }\n    window.scrollTo(0, 0);\n  }\n\n  componentDidMount() {   \n    this.changePage('UserList');\n  }\n\n  render() {    \n    return (\n      <div className=\"App\">\n        <Header history={ this.state.history } changePage={this.changePage.bind(this)}/>\n            <div className=\"main\">              \n              { this.state.page }\n            </div>\n      </div>\n    );    \n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}